// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PostRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostRequest) Reset()         { *m = PostRequest{} }
func (m *PostRequest) String() string { return proto.CompactTextString(m) }
func (*PostRequest) ProtoMessage()    {}
func (*PostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *PostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostRequest.Unmarshal(m, b)
}
func (m *PostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostRequest.Marshal(b, m, deterministic)
}
func (m *PostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostRequest.Merge(m, src)
}
func (m *PostRequest) XXX_Size() int {
	return xxx_messageInfo_PostRequest.Size(m)
}
func (m *PostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostRequest proto.InternalMessageInfo

func (m *PostRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Post struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedOn            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	UpdatedOn            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated_on,json=updatedOn,proto3" json:"updated_on,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Post) Reset()         { *m = Post{} }
func (m *Post) String() string { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()    {}
func (*Post) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *Post) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Post.Unmarshal(m, b)
}
func (m *Post) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Post.Marshal(b, m, deterministic)
}
func (m *Post) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Post.Merge(m, src)
}
func (m *Post) XXX_Size() int {
	return xxx_messageInfo_Post.Size(m)
}
func (m *Post) XXX_DiscardUnknown() {
	xxx_messageInfo_Post.DiscardUnknown(m)
}

var xxx_messageInfo_Post proto.InternalMessageInfo

func (m *Post) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Post) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Post) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Post) GetCreatedOn() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedOn
	}
	return nil
}

func (m *Post) GetUpdatedOn() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedOn
	}
	return nil
}

type ListPostResponse struct {
	Post                 []*Post  `protobuf:"bytes,1,rep,name=post,proto3" json:"post,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPostResponse) Reset()         { *m = ListPostResponse{} }
func (m *ListPostResponse) String() string { return proto.CompactTextString(m) }
func (*ListPostResponse) ProtoMessage()    {}
func (*ListPostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *ListPostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPostResponse.Unmarshal(m, b)
}
func (m *ListPostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPostResponse.Marshal(b, m, deterministic)
}
func (m *ListPostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPostResponse.Merge(m, src)
}
func (m *ListPostResponse) XXX_Size() int {
	return xxx_messageInfo_ListPostResponse.Size(m)
}
func (m *ListPostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPostResponse proto.InternalMessageInfo

func (m *ListPostResponse) GetPost() []*Post {
	if m != nil {
		return m.Post
	}
	return nil
}

func init() {
	proto.RegisterType((*PostRequest)(nil), "pb.PostRequest")
	proto.RegisterType((*Post)(nil), "pb.Post")
	proto.RegisterType((*ListPostResponse)(nil), "pb.ListPostResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xd9, 0xb4, 0xd5, 0x76, 0x82, 0x7f, 0x58, 0x8a, 0x84, 0xa8, 0x18, 0x8a, 0x87, 0x9e,
	0xb6, 0x52, 0x11, 0xf4, 0xac, 0xe2, 0x45, 0xa8, 0x14, 0x3d, 0x4b, 0xd3, 0x8c, 0x65, 0xa1, 0xc9,
	0xae, 0xd9, 0x89, 0xe0, 0xfb, 0xf9, 0x24, 0x3e, 0x89, 0x64, 0x37, 0x09, 0x25, 0xa5, 0x78, 0xcb,
	0xce, 0xf7, 0x9b, 0x6f, 0xe6, 0x9b, 0xc0, 0x81, 0xc1, 0xfc, 0x4b, 0x2e, 0x51, 0xe8, 0x5c, 0x91,
	0xe2, 0x9e, 0x8e, 0xc3, 0x8b, 0x95, 0x52, 0xab, 0x35, 0x4e, 0x6c, 0x25, 0x2e, 0x3e, 0x26, 0x24,
	0x53, 0x34, 0xb4, 0x48, 0xb5, 0x83, 0xc2, 0xd3, 0x36, 0x80, 0xa9, 0xa6, 0x6f, 0x27, 0x8e, 0xce,
	0xc1, 0x7f, 0x51, 0x86, 0xe6, 0xf8, 0x59, 0xa0, 0x21, 0x7e, 0x08, 0x9e, 0x4c, 0x02, 0x16, 0xb1,
	0xf1, 0x60, 0xee, 0xc9, 0x64, 0xf4, 0xc3, 0xa0, 0x5b, 0xea, 0x6d, 0x81, 0x0f, 0xa1, 0x47, 0x92,
	0xd6, 0x18, 0x78, 0xb6, 0xe4, 0x1e, 0x3c, 0x02, 0x3f, 0x41, 0xb3, 0xcc, 0xa5, 0x26, 0xa9, 0xb2,
	0xa0, 0x63, 0xb5, 0xcd, 0x12, 0xbf, 0x03, 0x58, 0xe6, 0xb8, 0x20, 0x4c, 0xde, 0x55, 0x16, 0x74,
	0x23, 0x36, 0xf6, 0xa7, 0xa1, 0x70, 0x1b, 0x8a, 0x7a, 0x43, 0xf1, 0x5a, 0x47, 0x98, 0x0f, 0x2a,
	0x7a, 0x66, 0x5b, 0x0b, 0x9d, 0xd4, 0xad, 0xbd, 0xff, 0x5b, 0x2b, 0x7a, 0x96, 0x8d, 0xae, 0xe0,
	0xf8, 0x59, 0x1a, 0x72, 0x49, 0x8d, 0x56, 0x99, 0x41, 0x7e, 0x06, 0x5d, 0xad, 0x0c, 0x05, 0x2c,
	0xea, 0x8c, 0xfd, 0x69, 0x5f, 0xe8, 0x58, 0x58, 0xdd, 0x56, 0xa7, 0xbf, 0x0c, 0x7a, 0xe5, 0xd3,
	0xf0, 0x08, 0xe0, 0xde, 0xee, 0x60, 0xef, 0xd0, 0x70, 0x61, 0xf3, 0xc5, 0x2f, 0x61, 0xff, 0x09,
	0xad, 0x39, 0x3f, 0x6a, 0x6c, 0xdc, 0x41, 0x37, 0xa8, 0x1b, 0x80, 0x07, 0x5c, 0x63, 0xe5, 0xb3,
	0x05, 0x9e, 0x6c, 0x25, 0x79, 0x2c, 0x7f, 0x53, 0x39, 0xfe, 0xcd, 0xe6, 0xd8, 0x39, 0xfe, 0x16,
	0xfa, 0x75, 0x38, 0xbe, 0xc3, 0x25, 0x1c, 0x96, 0x74, 0xfb, 0x04, 0xf1, 0x9e, 0xa5, 0xae, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x0b, 0x86, 0xd2, 0x56, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PostsClient is the client API for Posts service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PostsClient interface {
	CreatePost(ctx context.Context, in *Post, opts ...grpc.CallOption) (*Post, error)
	GetPost(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*Post, error)
	DeletePost(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdatePost(ctx context.Context, in *Post, opts ...grpc.CallOption) (*Post, error)
	ListPost(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListPostResponse, error)
}

type postsClient struct {
	cc grpc.ClientConnInterface
}

func NewPostsClient(cc grpc.ClientConnInterface) PostsClient {
	return &postsClient{cc}
}

func (c *postsClient) CreatePost(ctx context.Context, in *Post, opts ...grpc.CallOption) (*Post, error) {
	out := new(Post)
	err := c.cc.Invoke(ctx, "/pb.Posts/CreatePost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postsClient) GetPost(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*Post, error) {
	out := new(Post)
	err := c.cc.Invoke(ctx, "/pb.Posts/GetPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postsClient) DeletePost(ctx context.Context, in *PostRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.Posts/DeletePost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postsClient) UpdatePost(ctx context.Context, in *Post, opts ...grpc.CallOption) (*Post, error) {
	out := new(Post)
	err := c.cc.Invoke(ctx, "/pb.Posts/UpdatePost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postsClient) ListPost(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListPostResponse, error) {
	out := new(ListPostResponse)
	err := c.cc.Invoke(ctx, "/pb.Posts/ListPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PostsServer is the server API for Posts service.
type PostsServer interface {
	CreatePost(context.Context, *Post) (*Post, error)
	GetPost(context.Context, *PostRequest) (*Post, error)
	DeletePost(context.Context, *PostRequest) (*empty.Empty, error)
	UpdatePost(context.Context, *Post) (*Post, error)
	ListPost(context.Context, *empty.Empty) (*ListPostResponse, error)
}

// UnimplementedPostsServer can be embedded to have forward compatible implementations.
type UnimplementedPostsServer struct {
}

func (*UnimplementedPostsServer) CreatePost(ctx context.Context, req *Post) (*Post, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePost not implemented")
}
func (*UnimplementedPostsServer) GetPost(ctx context.Context, req *PostRequest) (*Post, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPost not implemented")
}
func (*UnimplementedPostsServer) DeletePost(ctx context.Context, req *PostRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePost not implemented")
}
func (*UnimplementedPostsServer) UpdatePost(ctx context.Context, req *Post) (*Post, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePost not implemented")
}
func (*UnimplementedPostsServer) ListPost(ctx context.Context, req *empty.Empty) (*ListPostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPost not implemented")
}

func RegisterPostsServer(s *grpc.Server, srv PostsServer) {
	s.RegisterService(&_Posts_serviceDesc, srv)
}

func _Posts_CreatePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Post)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostsServer).CreatePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Posts/CreatePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostsServer).CreatePost(ctx, req.(*Post))
	}
	return interceptor(ctx, in, info, handler)
}

func _Posts_GetPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostsServer).GetPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Posts/GetPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostsServer).GetPost(ctx, req.(*PostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Posts_DeletePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostsServer).DeletePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Posts/DeletePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostsServer).DeletePost(ctx, req.(*PostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Posts_UpdatePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Post)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostsServer).UpdatePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Posts/UpdatePost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostsServer).UpdatePost(ctx, req.(*Post))
	}
	return interceptor(ctx, in, info, handler)
}

func _Posts_ListPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostsServer).ListPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Posts/ListPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostsServer).ListPost(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Posts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Posts",
	HandlerType: (*PostsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePost",
			Handler:    _Posts_CreatePost_Handler,
		},
		{
			MethodName: "GetPost",
			Handler:    _Posts_GetPost_Handler,
		},
		{
			MethodName: "DeletePost",
			Handler:    _Posts_DeletePost_Handler,
		},
		{
			MethodName: "UpdatePost",
			Handler:    _Posts_UpdatePost_Handler,
		},
		{
			MethodName: "ListPost",
			Handler:    _Posts_ListPost_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
